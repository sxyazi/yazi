[package]
name        = "yazi-fm"
version     = "0.3.1"
edition     = "2021"
license     = "MIT"
authors     = [ "sxyazi <sxyazi@gmail.com>" ]
description = "Yazi File Manager"
homepage    = "https://yazi-rs.github.io"
repository  = "https://github.com/sxyazi/yazi"

[features]
default      = [ "vendored-lua" ]
vendored-lua = [ "mlua/vendored" ]

[dependencies]
yazi-adapter = { path = "../yazi-adapter", version = "0.3.1" }
yazi-boot    = { path = "../yazi-boot", version = "0.3.1" }
yazi-config  = { path = "../yazi-config", version = "0.3.1" }
yazi-core    = { path = "../yazi-core", version = "0.3.1" }
yazi-dds     = { path = "../yazi-dds", version = "0.3.1" }
yazi-fs      = { path = "../yazi-fs", version = "0.3.1" }
yazi-plugin  = { path = "../yazi-plugin", version = "0.3.1" }
yazi-proxy   = { path = "../yazi-proxy", version = "0.3.1" }
yazi-shared  = { path = "../yazi-shared", version = "0.3.1" }

# External dependencies
anyhow       = { workspace = true }
better-panic = "0.3.0"
crossterm    = { workspace = true }
fdlimit      = "0.3.0"
futures      = { workspace = true }
mlua         = { workspace = true }
ratatui      = { workspace = true }
scopeguard   = { workspace = true }
syntect      = { version = "5.2.0", default-features = false, features = [ "parsing", "plist-load", "regex-onig" ] }
tokio        = { workspace = true }
tokio-stream = { workspace = true }

# Logging
tracing            = { workspace = true }
tracing-appender   = "0.2.3"
tracing-subscriber = "0.3.18"

[target."cfg(unix)".dependencies]
libc              = { workspace = true }
signal-hook-tokio = { version = "0.3.1", features = [ "futures-v0_3" ] }

[target.'cfg(target_os = "macos")'.dependencies]
crossterm = { workspace = true, features = [ "use-dev-tty" ] }

[target.'cfg(all(not(target_os = "macos"), not(target_os = "windows")))'.dependencies]
tikv-jemallocator = "0.6.0"

[[bin]]
name = "yazi"
path = "src/main.rs"

[package.metadata.binstall]
pkg-url = "{repo}/releases/download/v{version}/yazi-{target}{archive-suffix}"
bin-dir = "yazi-{target}/{bin}{binary-ext}"
